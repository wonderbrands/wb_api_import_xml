import time

from flask import Flask, render_template, request, make_response, url_for, session
import json
import jsonrpc
import jsonrpclib
import random
import urllib.request
import getpass
import http
import requests
from pprint import pprint
import logging
import zipfile
import socket
import os
import xmlrpc.client
import base64
import openpyxl
import xlrd
import pandas as pd
#import MySQLdb
import mysql.connector

#API Configuration
dir_path = os.path.dirname(os.path.realpath(__file__))
#server_url  ='https://wonderbrands-v3-8443304.dev.odoo.com'
#db_name = 'wonderbrands-v3-8443304'
#username = 'admin'
#password = 'admin123'

server_url  ='https://wonderbrands-v3-8795112.dev.odoo.com'
db_name = 'wonderbrands-v3-8795112'
username = 'admin'
password = 'admin123'

print('----------------------------------------------------------------')
print('SCRIPT DE CREACIÓN DE FACTURAS POR SO')
print('----------------------------------------------------------------')
print('Conectando API Odoo')
common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(server_url))
uid = common.authenticate(db_name, username, password, {})
models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(server_url))
print(common)
print('Conexión con Odoo establecida')
print('----------------------------------------------------------------')
print('Conectando a Mysql')
print('----------------------------------------------------------------')
# Connect to MySQL database
mydb = mysql.connector.connect(
  host="wonderbrands1.cuwd36ifbz5t.us-east-1.rds.amazonaws.com",
  user="anibal",
  password="Tuy0TEZOcXAwBgtb",
  database="tech"
)
mycursor = mydb.cursor()
print(f"Leyendo query")
print('----------------------------------------------------------------')
print('Este proceso tomará algo de tiempo, le recomendamos ir por un café')
print('----------------------------------------------------------------')
mycursor.execute("""SELECT a.order_id, c.uuid, c.fecha
                    FROM somos_reyes.odoo_master_txns_c a
                    LEFT JOIN tech.sr_invoices_linio_dito b
                        ON a.marketplace_order_id = b.no_orden
                    LEFT JOIN finance.sr_sat_emitidas c
                        ON b.serie = c.folio
                    WHERE a.marketplace_order_id IN (219974176,295612176,245734176,286636176,296234176,226314176,257782176,241399176,275776176,271699176,242772176,212246176,218752176,249552176,253524176,243274176,281862176,277796176,217536176,284642176,269642176,217212176,281584176,236812176,295494176,276194176,216254176,282162176,233562176,295222176,289252176,276662176,269523576,225974176,252492176,243133576,215263576,277297576,249564176,294772176,257984176,283571576,299944176,298144176,224714176,271763576,285514176,231231576,228143576,225231576,263694176,266462176,283271576,254374176,297973576,265973576,245284176,239114176,245354176,264583576,277935576,291121576,279363576,219474176,223273576,286344176,215724176,268373576,232983576,271831576,298144176,289341576,288661576,265851576,269255576,221751576,275351576,258783576,271351576,239383576,234194176,226444176,293694176,248473576,241638576,261533576,233471576,249893576,239893576,218153576,287173576,242944176,263565576,237844176,234523576,264197576,236341576,269221576,277491576,285824176,238911576,243457576,232461576,281764176,252911576,278231576,298151576,224144176,245981576,282351576,213971576,218673576,268151576,218151576,231151576,242973576,231811576,238223576,271161576,215915576,215915576,221658576,294851576,273625576,288448576,249871576,287479576,245281576,239325576,273791576,254285576,283365576,229945576,275295576,285538576,229571576,227281576,263635576,223918576,271641576,299158576,299618576,284427576,235965576,233565576,268795576,222565576,269165576,271199576,292895576,242191576,266421576,241218576,276127576,286467576,297847576,277481576,237941576,278825576,226757576,269697576,225971576,267438576,259627576,272681576,295861576,263477576,298665576,211847576,244747576,291137576,232859576,242197576,268725576,281748576,222415576,238665576,293428576,286895576,277378576,223837576,276397576,281887576,254875576,227285576,279888576,282785576,243795576,245687576,283949576,264918576,266927576,271217576,289297576,246145576,284727576,296478576,253578576,234278576,261378576,224457576,258538576,234127576,251677576,251487576,221678576,227898576,286365576,298119576,277518576,273167576,288438576,281347576,264937576,261637576,221819576,298458576,294678576,246427576,251638576,211427576,274927576,289197576,221877576,264757576,224565576,234417576,289718576,238118576,219438576,246997576,213519576,235689576,269798576,292428576,226398576,229698576,211678576,287168576,287739576,262576576,216666576,281749576,226898576,273189576,265969576,285342576,248499576,217134576,248169576,266736576,293568576,291389576,217768576,233179576,295968576,287828576,284598576,265257576,294748576,267356576,258598576,222462576,263639576,219939576,241742576,243268576,293956576,216526576,239276576,297859576,274139576,231379576,224448576,261148576,299169576,274719576,219986576,215728576,262612576,233949576,222759576,253423776,249112576,224811776,291146576,281826576,264868576,244539576,237832576,243269576,284399576,282734576,254862576,278826576,221422576,249368576,247486576,211386576,285749576,238929576,228769576,215561876,292866576,227692576,282649576,267312576,282832576,293366576,295152576,229636576,213766576,281776576,211766576,298566576,245566576,282458876,265742576,298149576,235936576,232559576,251642576,279229576,275396576,264296576,284776576,222599576,256676576,221522576,236366576,298366576,299686576,217776576,213776576,259136576,278152576,235116576,238592576,265432576,285629576,234129576,282199576,217582576,282529576,269694776,214482576,274296576,286849576,241999576,299322576,253352576,255662576,271929576,239952576,253532576,297526576,253492576,239546576,256686576,247932576,295974576,267934576,217256576,282292576,289182576,271282576,244682576,261564576,252884576,256956576,237286576,245312576,229254576,268594576,254882576,244734776,228194576,254354576,276742576,211652576,233786576,246342576,238452576,271284576,267934576,298583776,298552576,288913776,248924576,295374576,295836576,278752576,224252576,279584576,244162576,294666576,229763776,287652576,224922576,237453776,241787776,283277776,221535776,244353876,246291776,231113776,245984576,232554576,291191776,215773776,219361776,239131776,238831776,211738776,253793776,268593776,275395776,296491776,274525976,243965976,246833776,224775776,254913776,249444576,217747876,251627776,243465776,245844576,299733776,216493776,214153776,294511776,268745776,288681776,214981776,268511776,294931776,249385776,252938776,212763776,253527776,274163776,267423776,258341776,254127776,254223776,282277776,225387776,246911776,211738776,289311776,238158776,246537776,249659776,245665776,264355776,239255776,226555776,249543876,268351776,246241776,247965776,245171776,298115776,257335776,275581776,272827776,258385776,216987776,235228776,254377776,216175776,226945776,231387776,243578776,266265776,218265776,275467776,244125776,272925776,272277776,262815876,246948776,251227776,216918776,286357776,238357776,254732276,249829776,222685176,243497376,217717376,223418376,275526376,251687376,247375376,242359376,267847376,267847376,297338376,219825376,287685376,215287376,215287376,215287376,215287376,268235376,283125376,221687376,225488376,274338376,224787376,276477376,287817376,248688376,282977376,219419176,276286376,265767376,285258376,214768376,252697376,294196376,239757376,274457376,228627376,266767376,266767376,266767376,249797376,287677376,277177376,246157376,283849376,292796376,298197376,281167376,254978376,231368376,286538376,225719376,265127376,285218376,285947376,214659376,246569376,248627376,248627376,248627376,248627376,248627376,248627376,248627376,248627376,248627376,248627376,244528376,235879376,218658376,254367376,254367376,243159376,249777376,214849376,297429376,253247376,251632376,266239376,248469376,286327376,269789376,224928376,229958376,229958376,262727376,264899176,248318376,237688376,294319376,249319376,269976376,283127376,259558376,232899376,222238376,268667376,281546376,281758376,259789376,295939376,294279376,249499376,249499376,249499376,249499376,285728376,259898376,221153576,216252376,257946376,226966376,226966376,226589376,294959376,246769376,264348376,223538376,225748376,298836376,262948376,286855176,247329376,247329376,273998376,265529376,265529376,264589376,259636376,255516376,299246376,228312376,264189376,216666376,272658376,251899376,259279376,258866376,266276376,266276376,266276376,281786376,257359376,257359376,295948376,225872376,258449376,265857176,244919376,254429376,256732376,279969376,216989376,234816376,282419376,239931176,294916376,294828376,242929376,211836376,299673176,267666376,247426376,277732376,235296376,279896376,279896376,243112376,219748376,269268176,293696376,224646376,239796376,293276376,241932376,221996376,221996376,246513176,244969376,214724376,263984376,275452376,271443176,261132376,261132376,212556376,219192376,216136376,259826376,243523176,245629376,298771176,235634376,237994376,217746376,214296376,214296376,214296376,296296376,296296376,296296376,227856376,233856376,272349376,257546376,242374376,253562376,266542376,269929376,274946376,242462376,296934376,266862376,223682376,283572376,299512376,299512376,286182376,279262376,221126376,247592376,259682376,213334376,237615176,279633176,243344376,297621176,251274376,286182376,221662376,239352376,265592376,219346376,229642376,237462376,263511176,262582376,231144376,222724376,215692376,284862376,251364376,234753176,227613176,287634376,233254376,237484376,218537176,292411176,264483176,272823176,273513176,262755176,293333176,284197176,218923176,233324376,217894376,219636176,266249176,295754376,257947176,217775176,214683176,255194376,215597176,262883176,283271176,266665176,242151176,269663176,298785176,249871176,299857176,212824376,281333176,235561176,255893176,265596176,227933176,239383176,246133176,263463176,275168176,262655176,226181176,267377176,248775176,281133176,275911176,234837176,253821176,213215176,293873176,247381176,239443176,223395176,245515176,217941176,248831176,248775176,249471176,258915176,294237176,297537176,237675176,277291176,211438176,228485176,283327176,239443176,214285176,252725176,214175176,286521176,274425176,291557176,262295176,261137176,244345176,237761176,281947176,219841176,293317176,216386176,276977176,225187176,261841176,218658176,249285176,224389176,231657176,245446176,272275176,278241176,225418176,245848176,287488176,218777176,252167176,233617176,227665176,281947176,279445176,294778176,276627176,268957176,254615176,273116176,249287176,287639176,238679176,299586176,276747176,248527176,246528176,242147176,263376176,215267176,234488176,214967176,263585176,275265176,257647176,245624176,295824176,236189176,268436176,236559176,266788176,217478176,287454176,211898176,298349176,283569176,227159176,222339176,284228176,212746176,265626176,263716176,296529176,287978176,263968176,226558176,242399176,269449176,274319176,236199176,294189176,252727176,275499176,213129176,284766176,244312176,211429176,265549176,265399176,218656176,276826176,215926176,238149176,294388176,265476176,258759176,222129176,227872176,218316176,253276176,299866176,296116176,289848176,254194176,223439176,266342176,222932176,263922176,258942176,267883576,246582176,241589176,225676176,263866176,253586256,264292256,294293456,281216256,281216256,292876256,258549256,287756256,211552256,231976256,266874256,251636256,276172256,231976256,276376256,227366256,245436256,275692256,218232256,279633456,227376256,215952256,299169256,241654256,288186256,237796256,233711456,245993456,232186256,232186256,261136256,269793456,249766256,283956256,239912256,226234256,269183456,269942256,257672256,284974256,294292256,284542256,284643456,284643456,265492256,265264256,217282256,226552256,242224256,249894256,243615456,259944256,242514256,283153456,281582256,216194256,271573456,235354256,221242256,228774256,291944256,256384256,284481456,225663456,252914256,297991456,217431456,277484256,237415456,265181456,266671456,224587456,239114256,239754256,261373456,293164256,217411456,241261456,292591456,247363456,279373456,273387456,258131456,261864256,287857456,292511456,274573456,243261456,241115456,216895456,231993456,251537456,251537456,255251456,255251456,279223456,243685456,288743456,296335456,275671456,239523456,212931456,223455456,253291456,242111456,284135456,228867456,234855456,269915456,273635456,275865456,292419456,286247456,247525456,284915456,239364456,278249456,237655456,257881456,283625456,291328456,275255456,279661456,265927456,297585456,221461456,295845456,295845456,271556456,271556456,287275456,275977456,292115456,292115456,299187456,241687456,237485456,237485456,212585456,233829456,216928456,231827456,251712456,297638456,231567456,228889456,228889456,275547456,265575456,252549456,238635456,252577456,274445456,242915456,238379456,287116456,258415456,255225456,255297456,248847456,237747456,227248456,217347456,236849456,285489456,285489456,285489456,264755456,291919456,244787456,239778456,277537456,297599456,257699456,296968456,252318456,249237456,293762456,244327456,279859456,279859456,266497456,259269456,261297456,284747456,269549456,252162456,291176456,274229456,219788456,224919456,251896456,297324456,244827456,222386456,279549456,258958456,219789456,287936456,299298456,278862456,218646456,289719456,297453376,282526456,224846456,282378456,282378456,268334456,213168456,238277456,275849456,288399456,239712456,263149456,259588456,222499456,222499456,258882456,247934456,245619456,228694456,223533376,298716456,273992456,212986456,225776456,297362456,252616456,299976456,264622456,231233376,272146456,247812456,221933376,254572456,281652456,235212456,263872456,258632456,236213376,237512456,221841376,266222456,265552456,265552456,269564456,296862456,287132456,264744456,234353376,269354456,269354456,234493376,287446456,222992456,296333376,253614456,235122456,235714456,235714456,218333376,256444456,263333376,223994456,247514456,243473376,252171376,239364456,245214456,248493376,225531376,225531376,225531376,261261376,276944456,282292456,246711376,235364456,224964456,281722456,247143376,242614456,276923376,258194456,285714456,268844456,233931376,233931376,286443376,282413376,247644456,276363376,218793376,259243376,232494456,298943376,241371376,287953376,253951376,233523376,295943376,292473376,243213376,274833376,211821376,266853376,251251376,292151376,219643376,215761376,217413376,241683376,261891376,261891376,261891376,261891376,261891376,261891376,261891376,261891376,261891376,278591376,296371376,267661376,227177376,298811376,215431376,228611376,235691376,272281376,243371376,255241376,236181376,264343376,265851376,222881376,285991376,223287376,285661376,276651376,294848376,218355376,292747376,258545376,258495376,239991376,289291376,252831376,243975376,278215376,223541376,268421376,263871376,213345376,229125376,263861376,263861376,288956176,222536176,272246176,261629176,221249176,213169176,289596176,249345376,249345376,249345376,249345376,279261376,241399376,231525376,295237376,238995376,225985376,248841376,211635376,281767376,261965376,214347376,213445376,213445376,279421376,222935376,296135376,229157656,228185656,267955656,222615656,298975656,219241656,295917656,278645656,281257656,283235656,219727656,251387656,269345656,229875656,251818656,295215656,289477656,237555656,229875656,299488656,227185656,232378656,226425656,297575656,222445656,227137656,269758656,261848656,216978656,254927656,297316656,263425656,218365656,268357656,247328656,251237656,261127656,277188656,297777656,254377656,211437656,294369656,227717656,228239656,237257656,291917656,282732656,265656656,272159656,288297656,224879656,266148656,242536656,276747656,249867656,296588656,251999656,278998656,294679656,241156656,292539656,269767656,279732656,246119656,251228656,217469656,274248656,253516656,275248656,275248656,255679656,291159656,268526656,294652656,235836656,279999656,214276656,267252656,271486656,241213256,265856656,291776656,293162656,216476656,223136656,239712456,231962256,236146256,249766256,249766256,253756256,261136256,276469256,294389256,237879256,214779256,238839256,291428256,253328256,262568256,275998256,228588256,299278256,219278256,222978256,229878256,246618256,254847256,298847256,281747256,281747256,224347256,279967256,212167256,291367256,238997256,276897256,217897256,295897256,222797256,233597256,239687256,218387256,276977256,259217256,275617256,229917256,259917256,286817256,239117256,255445256,249945256,251345256,282425256,272825256,253125256,254325256,253465256,245265256,293695256,298985256,251885256,264675256,223775256,225835256,292741256,287741256,284421256,246861256,282691256,212981256,287631256,273831256,258443256,232643256,237276656,219492656,235623256,216723256,216723256,216723256,271123256,227763256,238993256,263536656,211476656,288873256,213244656,278844656,222192656,285364656,295694656,282894656,274984656,293174656,217254656,274614656,211594256,282867456,214282256,247249256,288893956,247283956,224336856,246284856,242483956,213829856,272553956,229553956,282225956,235753956,278524856,258316856,278391956,234176856,281285956,216994856,235154856,273264856,293517956,286164856,299613956,284233956,226644856,227137656,266781956,225944856,253363956,282183956,232913956,251413956,295361956,295361956,284563956,212183956,244985956,234673956,213431956,242725956,258373956,223413956,234251956,252483956,215783956,241773956,262851956,261653956,242253956,278743956,223775956,227131956,267323956,239393956,257281956,221773956,227663956,292461956,252411956,267323956,288537956,231841956,291615956,295335956,297751956,231537956,219861956,253529956,281137956,227115956,272449956,254382956,295855956,258955956,221165956,248755956,271537956,216375956,283787956,248647956,231955956,237755956,283847956,279925956,297357956,257918956,218819956,287838956,249597956,216227956,243245956,293737956,285237956,266539956,244628956,297964656,248381256,259376256,259376256,259376256,259376256,259376256,259376256,245613456,288782656,242254656,232228656,297629956,297575656,227137656,269758656,216978656,289477656,254927656,258838956,266687956,298788256,295568256,297575656,227137656,269758656,216978656,289477656,254927656,225928256,254728256,232228656,266954256,219698956,219698956,252357956,244227956,272838956,217438956,257918956,247238956,224818956,269398956,298278956,246699956,254676956,281168956,291828956,261888956,269172956,213551656,251578956,281828956,281388956,246212956,276826956,289289956,283356956,233379956,214829956,211784956,295629956,238866956,256226956,258299956,249859956,263562956,232872956,216912956,244286956,228776956,278546956,248694956,221429956,227734956,239146956,241532956,298542956,222514956,263763656,216912956,263846956,258326956,268366956,265382956,285463656,232642956,269412956,225154256,293671656,273731656,294573656,227342956,246212956,213293656,236324956,296983656,258822956,245531656,237127256,217622956,243742956,242664956,251724956,283415656,253874956,296184956,282263656,235522956,268631656,228762956,212872956,258315656,294834956,295931656,282522956,245654956,217874956,263763656,297753656,248854956,277161656,227334956,227242956,255542956,264563656,234422956,217743656,286173656,228542956,231923656,246751656,237711656,285743656,283454956,226784956,224593656,292992956,212174956,273725656,299573656,276524956,268914956,264531656,264531656,271531656,218131656,221411656,299223656,215873656,238723656,238983656,239973656,237343656,253785656,253785656,288183656,272823656,283547656,227491656,269291656,219485656,248811656,218915656,231735656,217173656,299541656,218335656,232855656,287915656,269291656,268358656,285941656,275635656,275635656,275635656,241325656,288771656,243687556,222188556,284788556,264678556,215595556,235188556,229918556,241397556,248368556,277188556,217772556,299984856,272347556,229938556,224227556,229938556,236958556,277487556,269787556,232198556,289158556,268658556,215388556,267279556,266548556,225767556,214287556,299558556,231687556,224548556,296219556,271519556,268659556,283299556,291268556,213388556,284327556,259298556,234618556,218959556,244178556,233748556,233748556,233748556,233748556,274158556,253158556,263548556,289449556,236347556,275388556,244547556,292219556,253598556,266419756,229319556,219188556,247665756,253597556,274479556,254848556,296539556,297898556,271649856,262519556,244969556,243389556,263184756,271949556,227589556,276739556,212229556,246968556,223519556,214459556,228629556,236478556,248128756,267789556,246888556,243759556,243567556,212734556,254599556,229558556,292189556,268896556,215946556,247612556,244258556,234528756,271889556,286399556,273249556,249926556,236998556,278511756,269769556,272539556,294656556,269778556,253919556,278218756,275243756,265488756,291168756,259469556,289293756,255159756,271391756,272996556,272996556,267116556,253861756,258562756,281495756,233748556,246521756,281229556,239417856,284545756,248126556,296421856,219193756,275336556,225156556,233718756,257881756,257881756,249138856,288132556,229336556,272269556,219672556,285526556,241866556,243466556,296219556,223911756,235146556,258444556,221313756,283549556,241299556,232929556,213429556,221289556,267839756,234646556,228786556,248785756,241227756,262386556,227475756,265685756,248957756,254145756,246967756,257972556,241832556,231176556,294129556,268455756,258522556,285713756,247765756,212285756,243385756,266629556,271284556,275288756,273114556,294285756,226619756,241788756,224463856,297417756,228343756,228343756,259451756,223879756,233547756,292767756,292767756,254767756,254767756,254767756,292767756,262149756,218592556,297612556,234945756,264675756,215991756,286721756,293272556,296546556,218494756,252867756,241791756,288596556,256932556,285673756,228895756,259451756,294293756,245281756,222576556,273929756,242834556,218215756,287783856,263999756,268114556,294783756,257424756,257424756,268785756,248239756,234497756,264372556,271766556,284882556,275899756,229484556,218218756,282673756,261795756,296298756,214245756,232364556,237724556,279735756,289167756,256258756,229412556,259767756,238875756,231815856,271185756,245291756,225871756,283593756,212189756,245914256,266914556,293928756,255894556,249165756,281964556,229859756,254797756,295185756,294819756,222227756,211751756,229522756,235835756,273813756,226353856,253973756,248563756,259122556,277145756,281497756,244513756,272617756,272617756,272617756,245561756,212715756,227584556,252693756,252693756,247427856,233129756,255859756,253313756,239655756,255446756,258727756,248193756,248193756,248193756,264519756,242523756,262211756,279449756,299662556,295826756,219735756,267879756,259244556,229472556,285713756,228131756,257827756,276183756,291327756,239812756,265515756,272779756,254999756,259161756,239713756,244867756,295282756,291265756,233658756,272183756,277435756,219877756,216944556,288951856,254195756,252954556,291853756,278813756,278813756,237735756,238553756,298388756,216166756,276759756,267568756,242798756,226524556,277459756,261951756,214555756,252191756,269191756,291764556,257735756,297177756,287673756,261396756,227589756,219863756,232249756,243525756,243525756,247734556,283593756,263999756,218282556,274855756,252654556,271111756,234655756,265941756,234283756,234283756,232543756,298383756,295472556,267579256,252355856,223154756,237364556,294419756,293472756,256144556,276284556,216776756,223994556,239398756,233283756,221521756,246161756,257424756,257424756,286148756,283358756,295533756,211841756,252762556,256342556,215965756,215965756,293296756,293296756,254715756,246474556,246256756,259716756,217955856,295769756,289842556,237962556,279587756,232821756,272273856,223189756,268648756,243951756,211624556,299452756,216494556,236628756,291224756,213311756,261135756,257767756,284685756,274943756,283334756,231163856,221787756,253521756,256325756,231185756,266671756,226936756,228861756,275943756,248374556,288255756,258955756,243579756,213474556,285248756,282158756,291744556,213149756,238924556,273682756,232181756,257474556,223757756,248488756,263618756,272173756,286532756,293865756,279683756,282953756,222137756,218111756,291685756,216425756,228317756,223615756,242493856,269493856,219493856,215493856,292568756,296169756,238256756,225219756,236724556,275538856,282937756,247535856,274456756,235474556,297388756,292511756,271148756,255712756,223354556,297751856,225564756,288615756,276167756,213118756,237167756,262942756,238438756,278813756,212638856,253988756,276579756,255236756,258595756,221183956,292347856,262832756,229862756,284559756,233535756,298835856,261428856,252374756,231986756,245227756,241856756,225637756,285224756,258324756,258324756,258324756,293393856,295942756,286126756,218215756,285515756,252138756,237666756,238243856,262652756,282316756,235196756,234837756,239547756,272178756,252728856,279949756,264868756,244778756,254778856,275186756,283235756,285574756,273642756,276625756,286888756,212427756,284527756,224747756,255592756,238844556,243778756,259693756,239713856,232598756,299434756,248416756,261432756,298913856,289632756,269946756,236466756,243346756,291297856,248189856,214848756,234762756,271253756,264775856,291865856,222165856,222165856,264474856,246537856,294299756,275164756,293494756,289879756,212482756,288516756,248385856,231654756,276996756,257174856,298472756,278825756,232257856,236452756,248516756,254317756,218624756,298149756,237779756,288248756,237625856,237625856,229483856,269121856,248893856,231225856,231225856,231225856,231225856,231225856,214826756,294935856,243864756,231317856,286721856,286721856,286721856,286721856,286721856,292696756,275898756,225511856,266891856,259891856,214382756,232455856,232455856,232455856,232455856,275333856,227164756,286787856,231797856,242672756,277134756,271782756,217912756,276952856,289961856,289961856,246237856,258122756,235272756,212298756,244634756,252737856,215118756,211222756,241448856,227589756,229567856,275311856,267258756,225255856,248351856,211595856,211595856,211595856,211595856,211595856,298835856,298835856,298835856,267783856,259349856,277641856,289453856,289517856,241441856,241441856,282453856,212631856,275231856,275231856,216288856,231363856,283798856,266395856,285158856,221195856,229558856,281777856,263627856,235314756,256351856,227889856,278773856,265773856,227865856,212828856,239521856,263125856,292691856,296763856,257827856,266374856,242163856,223564756,221278856,267865856,299984856,246549856,258779856,236489856,219347856,245697856,286641856,279351856,212533856,243487856,243487856,285834856,263556856,226354856,297953856,254413856,292984856,238326856,222167856,287597856,287338856,232154856,277321856,297214756,285186856,247231856,237269856,296975856,233226856,247185856,239521856,239521856,239521856,239521856,273689856,244479856,261428856,245221856,296446856,296446856,268519856,233872856,288645856,267868856,228426856,242434856,224628856,221278856,231324756,215649856,228958856,248388856,243452856,291137856,291137856,233268856,235197856,241994856,293959856,259997856,242467856,273288856,291278856,239357856,271345856,297898856,211535856,298391856,276673856,267419856,263556856,296487856,223775956,289463956,286856856,234154856,293419856,259727856,238437856,281428856,239738856,231317856,246635856,284818856,291836856,262367856,259186856,247945856,251977856,274767856,247954856,273329856,228379856,279745856,266169856,236783956,252834856,237227856,257294856,249814856,289584856,253797856,257617856,263462856,264854856,273562856,218152856,276932856,288195856,234787856,272127856)
                    AND c.fecha BETWEEN '2023-03-01' AND '2023-06-30'
                    GROUP BY c.uuid
                    ORDER BY c.fecha ASC""")
sales_order_records = mycursor.fetchall()
xml_dict = {}
xml_list = []
inv_list = []
sales_error_state = []
sales_no_exist = []
sales_w_inv = []
sales_no_xml = []
sales_mod = []
inv_names = []
inv_ids = []
date_year = '20'
#Ciclo que ordena las SO, los UUIDS y las fechas en un diccionario
for row in sales_order_records:
    so_name = row[0]
    xml_name = row[1]
    xml_date = date_year + row[2].strftime("%y-%m-%d %H:%M:%S")

    if so_name not in xml_dict:
        xml_dict[so_name] = []

    xml_dict[so_name].append(xml_name)
    xml_dict[so_name].append(xml_date)
for so_order, xml_files in xml_dict.items():
    value_position = 0
    value_position_date = 1
    so_domain = ['name', '=', so_order]
    for xml_ids in so_order[1]:
        xml_list.append(xml_ids)
    sale_ids = models.execute_kw(db_name, uid, password,'sale.order', 'search_read', [[so_domain]])
    try:
        if sale_ids:
            #Obtiene los datos principales de la factura
            order_name = sale_ids[0]['name']
            order_state = sale_ids[0]['state']
            print(f"Orden de venta encontrada en el sistema")
            so_inv_count = sale_ids[0]['invoice_count']
            if order_state == 'done':
                if so_inv_count < 1:
                    print(f"Nombre de la orden de venta {order_name}")
                    print(f"Estado de la orden de venta: {order_state}")
                    print("Definiendo valores de la factura")
                    invoice_id = []
                    sale_id = int(sale_ids[0]['id'])
                    sale_order_line_id = sale_ids[0]['order_line']
                    print(f"ID de lineas de orden de venta: {sale_order_line_id}")
                    #Define los valores de la factura en un diccionario
                    invoice = {
                        'ref': '',
                        'move_type': 'out_invoice',
                        'currency_id': sale_ids[0]['currency_id'][0],
                        'narration': sale_ids[0]['note'],
                        'campaign_id': False,
                        'medium_id': sale_ids[0]['medium_id'],
                        'source_id': sale_ids[0]['source_id'],
                        'user_id': sale_ids[0]['user_id'][0],
                        'invoice_user_id': sale_ids[0]['user_id'][0],
                        'team_id': sale_ids[0]['team_id'][0],
                        'partner_id': sale_ids[0]['partner_id'][0],
                        'partner_shipping_id': sale_ids[0]['partner_shipping_id'][0],
                        'fiscal_position_id': sale_ids[0]['fiscal_position_id'],
                        'partner_bank_id': 1,
                        'journal_id': 1,  # company comes from the journal
                        'invoice_origin': sale_ids[0]['name'],
                        'invoice_payment_term_id': sale_ids[0]['payment_term_id'],
                        'payment_reference': sale_ids[0]['reference'],
                        'transaction_ids': [(6, 0, sale_ids[0]['transaction_ids'])],
                        'invoice_line_ids': [],
                        'company_id': 1,
                    }
                    #Busca el id del la tabla order_line en el modelo sale.order.line y los agrega al diccionario de la factura
                    line_domain = ['id', 'in', sale_order_line_id]
                    sale_order_line = models.execute_kw(db_name, uid, password, 'sale.order.line', 'search_read', [[line_domain]])
                    for inv_lines in sale_order_line:
                        line_id = inv_lines['id']
                        invoice_lines = {'display_type': inv_lines['display_type'],
                                         'sequence': inv_lines['sequence'],
                                         'name': inv_lines['name'],
                                         'product_id': inv_lines['product_id'][0],
                                         'product_uom_id': inv_lines['product_uom'][0],
                                         'quantity': inv_lines['product_qty'],
                                         'discount': inv_lines['discount'],
                                         'price_unit': inv_lines['price_unit'],
                                         'tax_ids': [(6, 0, [inv_lines['tax_id'][0]])],
                                         'analytic_tag_ids': [(6, 0, inv_lines['analytic_tag_ids'])],
                                         'sale_line_ids': [(4, line_id)],
                                         }
                        invoice['invoice_line_ids'].append((0,0, invoice_lines))
                    #Crea la factura con los valores previamente obtenidos
                    create_inv = models.execute_kw(db_name, uid, password, 'account.move', 'create', [invoice])
                    # Agrega un mensaje a la factura para identificar las facturas que se hacen por API
                    print('La factura de la orden: ', order_name, 'fue creada con ID: ', create_inv)
                    inv_ids.append(create_inv)
                    print("Agregando mensaje a la factura")
                    message = {
                        'body': 'Esta factura fue creada por el equipo de Tech vía API',
                        'message_type': 'comment',
                    }
                    write_msg_tech = models.execute_kw(db_name, uid, password, 'account.move', 'message_post', [create_inv],message)
                    if xml_files:
                        #Determina la posición del uuid y la fecha de factura en el diccionario xml_dict
                        file_name = xml_files[value_position]
                        file_date = xml_files[value_position_date]
                        file_name_mayus = file_name.upper()
                        print(f"AGREGANDO ARCHIVO XML A LA FACTURA")
                        invoices_folder = 'G:/Mi unidad/xml_linio_invoices/'
                        print(f"El xml {file_name} será agregado a la factura")
                        #Busca el XML en la carpeta previamente definida
                        xml_file = file_name + '.xml'
                        xml_file_path = os.path.join(invoices_folder, xml_file)
                        with open(xml_file_path, 'rb') as f:
                            xml_data = f.read()
                        xml_base64 = base64.b64encode(xml_data).decode('utf-8')
                        #Crea una lista para agregar el archivo XML al attachment de la factura
                        attachment_data = {
                            'name': xml_file,
                            'datas': xml_base64,
                            'res_model': 'account.move',
                            'res_id': create_inv,
                        }
                        #Agrega la lista al attachment
                        attachment_ids = models.execute_kw(db_name, uid, password, 'ir.attachment', 'create',[attachment_data])
                        attachment_id = int(attachment_ids)
                        #Crea una lista para agregar el nombre del UUID a la tabla EDI document (esta tabla solo se puede ver en modo Debug en Odoo)
                        values = [{
                            'move_id': create_inv,
                            'edi_format_id': 2,
                            'attachment_id': attachment_id,
                            'state': 'sent',
                            'create_uid': 1,
                            'write_uid': 2,
                        }]
                        print('AGREGANDO REGISTRO XML A LA TABLA DOCUMENTOS EDI')
                        edi_document = models.execute_kw(db_name, uid, password, 'account.edi.document', 'create',values)
                        print('Valores para la tabla Documentos EDI: ', values)
                        print('Registro account.edi.document creado')
                        print("Actualizando estado de la factura")
                        #Se actualiza el estado de la factura a done llamando al botón "Confirmar"
                        upd_invoice_state = models.execute_kw(db_name, uid, password, 'account.move', 'action_post',[create_inv])
                        print('Se publica la factura: ', create_inv)
                        print(f"Se agrega el folio fiscal: {file_name_mayus}")
                        #Actuaiza el campo de folio fiscal
                        upd_folio_fiscal = models.execute_kw(db_name, uid, password, 'account.move', 'write',[[create_inv], {'l10n_mx_edi_cfdi_uuid': file_name_mayus}])
                        # Parche momentaneo ya que el folio fiscal no funciona por ahora
                        upd_folio_fiscal_narr = models.execute_kw(db_name, uid, password, 'account.move', 'write',[[create_inv], {'narration': file_name_mayus}])
                        # Actualiza Fecha de factura
                        print(f"Se Modifica la fecha de factura: {file_date}")
                        upd_inv_date = models.execute_kw(db_name, uid, password, 'account.move', 'write',[[create_inv], {'invoice_date': file_date}])
                        #Busca el nombre de la factura como referencia una vez publicada
                        search_inv_name = models.execute_kw(db_name, uid, password, 'account.move', 'search_read',[[['id', '=', create_inv]]])
                        inv_name = search_inv_name[0]['name']
                        #Posiciones de los array por si las SO tienen más de un UUID
                        value_position += 2
                        value_position_date += 2
                        sales_mod.append(order_name)
                        inv_names.append(inv_name)
                        print('----------------------------------------------------------------')
                    else:
                        print(f'La orden: {order_name} no tiene un XML en la carpeta')
                        sales_no_xml.append(order_name)
                        continue
                else:
                    print(f'La orden de venta: {order_name} ya tiene una factura creada')
                    print('----------------------------------------------------------------')
                    sales_w_inv.append(order_name)
                    continue
            else:
                print(f"Revise el estatus de la orden {order_name} se encuentra en estatus {order_state}")
                print(f"Por lo que esta orden no puede ser facturada")
                sales_error_state.append(order_name)
                continue
        else:
            print(f'El ID de la orden: {so_order} no coincide con ninguna venta en Odoo')
            sales_no_exist.append(so_order)
            continue
    except Exception as e:
        print(f"Error al crear la factura de la orden {so_order}: {e}")

print('PROCESO DE FACTURACIÓN POR ORDEN DE VENTA FINALIZADO')
print(f"Ordenes que no están en done {sales_error_state}")
print(f"Ordenes que no existen en Odoo {sales_no_exist}")
print(f"Ordenes que ya tenían una factura {sales_w_inv}")
print(f"Ordenes sin XML {sales_no_xml}")
print(f"Ordenes a las que se les creo factura: {sales_mod}")
print(f"Nombre de las facturas creadas: {inv_names}")
print(f"IDs de las facturas creadas: {inv_ids}")


mycursor.close()
mydb.close()
